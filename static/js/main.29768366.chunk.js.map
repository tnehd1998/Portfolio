{"version":3,"sources":["store/theme.ts","components/ThemeButton/styles.ts","components/ThemeButton/index.tsx","components/Header/styles.ts","components/Header/index.tsx","store/info.ts","components/Career/styles.ts","components/Career/index.tsx","components/CareerDescription/styles.ts","components/CareerDescription/index.tsx","components/PersonalDescription/styles.ts","components/PersonalDescription/index.tsx","components/TechStackDescription/styles.ts","components/TechStack/styles.ts","components/TechStack/index.tsx","components/TechStackDescription/index.tsx","pages/AboutPage/styles.ts","pages/AboutPage/index.tsx","pages/MainPage/styles.ts","pages/MainPage/index.tsx","components/Project/styles.ts","components/Project/index.tsx","assets/images/kuna.png","assets/images/mlb.png","assets/images/portfolio.png","assets/images/youtube.png","store/project.ts","pages/ProjectPage/styles.ts","pages/ProjectPage/index.tsx","pages/ContactPage/styles.ts","pages/ContactPage/index.tsx","styles/theme.ts","pages/BlogPage/styles.ts","store/blog.ts","components/Blog/styles.ts","components/Blog/index.tsx","pages/BlogPage/index.tsx","App.tsx","index.tsx"],"names":["isLightThemeState","atom","key","default","ThemeButtonContainer","styled","div","props","isLightTheme","ThemeButton","useRecoilState","setIsLightTheme","onClick","currentTheme","HeaderLink","Link","theme","textColor","WebsiteHeader","bgTransparent","headerColor","WebsiteLogo","img","NavMenuList","ul","NavMenuItem","li","Header","useState","setBgTransparent","calculateHeightY","currentY","window","pageYOffset","moveScrolltoDefault","scrollTo","useEffect","addEventListener","removeEventListener","to","src","introductionsState","first","second","third","careersState","logo","name","period","Wrapper","Logo","DescriptionWrapper","Name","p","Period","CareerItem","CareerDescription","careers","useRecoilValue","map","career","index","Career","Introduction","PersonalDescription","introductions","currentRow","row","currentIntroduction","combinedIntroduction","Object","values","value","Category","TechStackWrapper","SkillBar","SkillBarRange","level","Level","TechStack","imageUrl","TechStackDescription","AboutPage","IntroductionText","h1","MainPage","setCurrentIntroduction","changeIntroduction","useCallback","current","timer","setTimeout","clearTimeout","Image","CommentWrapper","Title","HashtagsWrapper","DescriptionsWrapper","a","Project","title","descriptions","projectLink","hashtags","hashtag","description","href","target","projectsState","MLBImage","PortfolioImage","YoutubeImage","teamProjectsState","KUNAImage","ProjectPage","teamProjects","projects","project","ContactWrapper","Description","ContactLinkWrapper","ContactLink","item","ContactPage","className","lightTheme","bgColor","darkTheme","blogState","blogId","blogLink","question","BlogNumber","BlogTitle","BlogComment","Blog","rel","BlogList","BlogPage","blogs","blog","GlobalStyles","createGlobalStyle","reset","App","exact","path","component","from","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29768366.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const isLightThemeState = atom({\n  key: \"isLightThemeState\",\n  default: true,\n});\n","import styled from \"styled-components\";\n\nexport const ThemeButtonContainer = styled.div<{ isLightTheme: boolean }>`\n  cursor: pointer;\n  font-size: 18px;\n  background-color: ${(props) => (props.isLightTheme ? \"white\" : \"grey\")};\n  border: 1px solid ${(props) => (props.isLightTheme ? \"black\" : \"grey\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n`;\n","import React from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { isLightThemeState } from \"../../store/theme\";\nimport { ThemeButtonContainer } from \"./styles\";\n\nconst ThemeButton = () => {\n  const [isLightTheme, setIsLightTheme] = useRecoilState(isLightThemeState);\n\n  const onClickToggleTheme = () => {\n    setIsLightTheme((currentTheme) => !currentTheme);\n  };\n\n  return (\n    <ThemeButtonContainer\n      onClick={onClickToggleTheme}\n      isLightTheme={isLightTheme}\n    >\n      {isLightTheme ? \"🌞\" : \"🌙\"}\n    </ThemeButtonContainer>\n  );\n};\n\nexport default ThemeButton;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const HeaderLink = styled(Link)`\n  box-sizing: border-box;\n  text-decoration: none;\n  color: ${(props) => props.theme.textColor};\n  transition: color 0.5s linear;\n`;\n\nexport const WebsiteHeader = styled.div<{ bgTransparent: boolean }>`\n  width: 100%;\n  display: flex;\n  background: ${(props) =>\n    props.bgTransparent ? \"transparent\" : props.theme.headerColor};\n  opacity: ${(props) => (props.bgTransparent ? 1 : 0.9)};\n  position: fixed;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2rem 0;\n`;\n\nexport const WebsiteLogo = styled.img<{ bgTransparent: boolean }>`\n  width: 4rem;\n  height: 4rem;\n  padding-left: 2rem;\n  cursor: pointer;\n  background: ${(props) =>\n    props.bgTransparent ? \"transparent\" : props.theme.headerColor};\n\n  &:hover {\n    animation: rotatingAnimation 1s infinite;\n  }\n  @keyframes rotatingAnimation {\n    0% {\n      transform: scale(1);\n    }\n    50% {\n      transform: scale(1.2);\n    }\n    100% {\n      transform: scale(1);\n    }\n  }\n\n  @media (max-width: 768px) {\n    width: 3rem;\n    height: 3rem;\n    padding-right: 1rem;\n  }\n`;\n\nexport const NavMenuList = styled.ul<{ bgTransparent: boolean }>`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-right: 2rem;\n  background: ${(props) =>\n    props.bgTransparent ? \"transparent\" : props.theme.headerColor};\n`;\n\nexport const NavMenuItem = styled.li<{ bgTransparent: boolean }>`\n  list-style: none;\n  font-size: 1.5rem;\n  padding: 0rem 1rem;\n  cursor: pointer;\n  background: ${(props) =>\n    props.bgTransparent ? \"transparent\" : props.theme.headerColor};\n\n  &:hover {\n    color: grey;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 1.1rem;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport ThemeButton from \"../ThemeButton\";\n\nimport {\n  HeaderLink,\n  WebsiteHeader,\n  WebsiteLogo,\n  NavMenuList,\n  NavMenuItem,\n} from \"./styles\";\n\nconst Header = () => {\n  const [bgTransparent, setBgTransparent] = useState(true);\n\n  const calculateHeightY = () => {\n    const currentY = window.pageYOffset;\n    setBgTransparent(currentY ? false : true);\n  };\n\n  const moveScrolltoDefault = () => {\n    window.scrollTo(0, 0);\n  };\n\n  useEffect(() => {\n    function watchScroll() {\n      window.addEventListener(\"scroll\", calculateHeightY);\n    }\n    watchScroll();\n    return () => {\n      window.removeEventListener(\"scroll\", calculateHeightY);\n    };\n  });\n\n  return (\n    <WebsiteHeader bgTransparent={bgTransparent}>\n      <HeaderLink to=\"/\">\n        <WebsiteLogo\n          src={\n            \"https://user-images.githubusercontent.com/72953316/139514379-7e609f37-9fd7-4073-af26-4d96c0efdfe1.png\"\n          }\n          bgTransparent={bgTransparent}\n        />\n      </HeaderLink>\n      <NavMenuList bgTransparent={bgTransparent}>\n        <HeaderLink to=\"/about\" onClick={moveScrolltoDefault}>\n          <NavMenuItem bgTransparent={bgTransparent}>ABOUT</NavMenuItem>\n        </HeaderLink>\n        <HeaderLink to=\"/projects\" onClick={moveScrolltoDefault}>\n          <NavMenuItem bgTransparent={bgTransparent}>PROJECT</NavMenuItem>\n        </HeaderLink>\n        <HeaderLink to=\"/blogs\" onClick={moveScrolltoDefault}>\n          <NavMenuItem bgTransparent={bgTransparent}>BLOG</NavMenuItem>\n        </HeaderLink>\n        <HeaderLink to=\"/contact\">\n          <NavMenuItem bgTransparent={bgTransparent}>CONTACT</NavMenuItem>\n        </HeaderLink>\n        <ThemeButton />\n      </NavMenuList>\n    </WebsiteHeader>\n  );\n};\n\nexport default Header;\n","import { atom } from \"recoil\";\nimport { ICareer, IIntroduction } from \"../types/info.type\";\n\nexport const introductionsState = atom<IIntroduction[]>({\n  key: \"introductionsState\",\n  default: [\n    {\n      first: \"더 나은 삶을 위해 고민하는\",\n      second: \"🧑🏻‍💻프론트엔드 개발자🧑🏻‍💻\",\n      third: \"이수동입니다\",\n    },\n    {\n      first: \"개발자의 입장이 아닌\",\n      second: \"⭐️사용자의 입장을⭐️\",\n      third: \"최우선 순위로 두고 있습니다.\",\n    },\n    {\n      first: \"꾸준한 성장을 위해\",\n      second: \"🍀1일 1커밋 운동을🍀\",\n      third: \"하고 있습니다\",\n    },\n    {\n      first: \"항상 리팩토링 과정을 통해\",\n      second: \"🧹확장성 좋은 코드로🧹\",\n      third: \"유지보수 하고 있습니다\",\n    },\n  ],\n});\n\nexport const careersState = atom<ICareer[]>({\n  key: \"careersState\",\n  default: [\n    {\n      logo: \"https://user-images.githubusercontent.com/72953316/139514581-a4764ae3-07ed-49ab-9695-ee4c93ed2f5c.jpeg\",\n      name: \"건국대학교\",\n      period: \"2017.03 ~ 현재\",\n    },\n  ],\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.li`\n  width: 80vw;\n  display: flex;\n  border: 3px solid ${(props) => props.theme.textColor};\n  border-radius: 10px;\n  padding: 10px;\n`;\n\nexport const Logo = styled.img`\n  width: 10vw;\n  height: 10vw;\n  border-radius: 50%;\n  margin-right: 30px;\n`;\n\nexport const DescriptionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n`;\n\nexport const Name = styled.p`\n  font-size: 3vw;\n`;\n\nexport const Period = styled.p`\n  font-size: 2vw;\n`;\n","import { ICareer } from \"../../types/info.type\";\nimport { Wrapper, Logo, DescriptionWrapper, Name, Period } from \"./styles\";\n\nconst CareerItem = ({ logo, name, period }: ICareer) => {\n  return (\n    <Wrapper>\n      <Logo src={logo} />\n      <DescriptionWrapper>\n        <Name>{name}</Name>\n        <Period>{period}</Period>\n      </DescriptionWrapper>\n    </Wrapper>\n  );\n};\n\nexport default CareerItem;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useRecoilValue } from \"recoil\";\nimport { careersState } from \"../../store/info\";\n\nimport Career from \"../Career\";\nimport { Wrapper } from \"./styles\";\n\nconst CareerDescription = () => {\n  const careers = useRecoilValue(careersState);\n\n  return (\n    <Wrapper>\n      {careers.map((career, index) => (\n        <Career\n          key={index}\n          logo={career.logo}\n          name={career.name}\n          period={career.period}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default CareerDescription;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: start;\n  width: 80vw;\n  margin: auto;\n`;\n\nexport const Introduction = styled.p`\n  font-size: 1.7vw;\n  padding: 1em 0;\n  margin-left: 15vw;\n`;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { introductionsState } from \"../../store/info\";\n\nimport { Wrapper, Introduction } from \"./styles\";\n\nconst PersonalDescription = () => {\n  const introductions = useRecoilValue(introductionsState);\n\n  const currentRow = (row: number) => {\n    const currentIntroduction = introductions[row - 1];\n    let combinedIntroduction = \"\";\n    for (let value of Object.values(currentIntroduction)) {\n      combinedIntroduction += `${value} `;\n    }\n    return `📌 ${combinedIntroduction}`;\n  };\n\n  return (\n    <Wrapper>\n      <Introduction>{currentRow(1)}</Introduction>\n      <Introduction>{currentRow(2)}</Introduction>\n      <Introduction>{currentRow(3)}</Introduction>\n      <Introduction>{currentRow(4)}</Introduction>\n    </Wrapper>\n  );\n};\n\nexport default PersonalDescription;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Category = styled.p`\n  font-size: 3vw;\n`;\n\nexport const TechStackWrapper = styled.ul`\n  display: flex;\n  width: 80vw;\n  margin: 6vh 0;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 2em;\n  @media (max-width: 1150px) {\n    margin: 1em;\n  }\n\n  @media (max-width: 768px) {\n    margin: 0.8em;\n  }\n`;\n\nexport const Logo = styled.img`\n  width: 10vw;\n  height: 10vw;\n`;\n\nexport const Name = styled.p`\n  font-size: 1.5vw;\n  margin: 2vh 0;\n\n  @media (max-width: 1150px) {\n    font-size: 2vw;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 2vw;\n  }\n`;\n\nexport const SkillBar = styled.div`\n  width: 7rem;\n  height: 7px;\n  background-color: white;\n  border-radius: 5px;\n  @media (max-width: 1150px) {\n    width: 5rem;\n    height: 5px;\n    border-radius: 2px;\n  }\n\n  @media (max-width: 768px) {\n    width: 3rem;\n    height: 3px;\n  }\n`;\n\nexport const SkillBarRange = styled.div<{ level: number }>`\n  width: ${(props) => `${props.level}%`};\n  height: 7px;\n  border-radius: 5px 0px 0px 5px;\n  background-color: ${(props) =>\n    props.level >= 75\n      ? \"darkgreen\"\n      : props.level >= 60\n      ? \"greenyellow\"\n      : props.level >= 35\n      ? \"yellow\"\n      : \"red\"};\n  @media (max-width: 1150px) {\n    height: 5px;\n    border-radius: 2px 0px 0px 2px;\n  }\n\n  @media (max-width: 768px) {\n    height: 3px;\n  }\n`;\n\nexport const Level = styled.p`\n  font-size: 1.5vw;\n  margin-top: 1vh;\n  @media (max-width: 1150px) {\n    font-size: 2vw;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 2vw;\n  }\n`;\n","import { ITechStack } from \"../../types/info.type\";\nimport { Wrapper, Logo, Name, SkillBar, SkillBarRange, Level } from \"./styles\";\n\nconst TechStack = ({ name, imageUrl, level }: ITechStack) => {\n  return (\n    <Wrapper>\n      <Logo src={imageUrl} />\n      <Name>{name}</Name>\n      <SkillBar>\n        <SkillBarRange level={level} />\n      </SkillBar>\n      <Level>숙련도 : {level}/100</Level>\n    </Wrapper>\n  );\n};\n\nexport default TechStack;\n","import { Wrapper, Category, TechStackWrapper } from \"./styles\";\nimport TechStackItem from \"../TechStack\";\n\nconst TechStackDescription = () => {\n  return (\n    <Wrapper>\n      <Category>사용 언어</Category>\n      <TechStackWrapper>\n        <TechStackItem\n          name={\"JavaScript\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/139514668-daf638fd-d47f-44f8-b8be-59978a9d5623.png\"\n          }\n          level={85}\n        />\n        <TechStackItem\n          name={\"TypeScript\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/139514680-fb2aa67b-f663-4061-85be-6af4a48d5c1e.png\"\n          }\n          level={65}\n        />\n      </TechStackWrapper>\n      <Category>사용 기술</Category>\n      <TechStackWrapper>\n        <TechStackItem\n          name={\"React\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/139514692-a0d70e24-d962-40f1-b1e3-dfe64eaec2e0.png\"\n          }\n          level={80}\n        />\n        <TechStackItem\n          name={\"Recoil\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/151725152-83583fc0-042c-4f00-b85d-33424cb923db.png\"\n          }\n          level={65}\n        />\n        <TechStackItem\n          name={\"styled-components\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/139514655-8c2c65a0-4839-4285-8b8c-7f9cf3922823.png\"\n          }\n          level={75}\n        />\n        <TechStackItem\n          name={\"React-query\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/151725062-546049e5-92fc-486d-923b-a302f826013f.svg\"\n          }\n          level={60}\n        />\n        <TechStackItem\n          name={\"Jest\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/151725754-2864cf3a-8240-4cec-a06b-c0cdb08c25a5.png\"\n          }\n          level={60}\n        />\n        <TechStackItem\n          name={\"Storybook\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/160265579-07b91bbf-ad2a-41cd-ba3c-d82f59abf5eb.svg\"\n          }\n          level={60}\n        />\n      </TechStackWrapper>\n      <Category>공부중인 기술</Category>\n      <TechStackWrapper>\n        <TechStackItem\n          name={\"GraphQL\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/139514754-6095ae9a-e430-4721-9ad6-d79617cc7303.png\"\n          }\n          level={45}\n        />\n        <TechStackItem\n          name={\"NextJS\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/151731966-14852282-762a-470a-8502-74f778b2c1bb.png\"\n          }\n          level={50}\n        />\n      </TechStackWrapper>\n      <Category>개발자 도구</Category>\n      <TechStackWrapper>\n        <TechStackItem\n          name={\"Git\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/139514819-4eafb3e0-81c9-4bf7-89bd-cf955418a463.png\"\n          }\n          level={65}\n        />\n        <TechStackItem\n          name={\"Github\"}\n          imageUrl={\n            \"https://user-images.githubusercontent.com/72953316/139514830-219b9369-2ec9-48fe-947b-ab08d4f324e0.png\"\n          }\n          level={75}\n        />\n      </TechStackWrapper>\n    </Wrapper>\n  );\n};\n\nexport default TechStackDescription;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding-top: 10vh;\n`;\n\nexport const Category = styled.div`\n  font-size: 4vw;\n  text-align: center;\n  margin: 2em 0;\n`;\n","import CareerDescription from \"../../components/CareerDescription\";\nimport PersonalDescription from \"../../components/PersonalDescription\";\nimport TechStackDescription from \"../../components/TechStackDescription\";\nimport { Wrapper, Category } from \"./styles\";\n\nconst AboutPage = () => {\n  return (\n    <Wrapper>\n      <Category>About Me 🧑🏻‍💻</Category>\n      <PersonalDescription />\n      <Category>Career Path</Category>\n      <CareerDescription />\n      <Category>Tech Stack</Category>\n      <TechStackDescription />\n    </Wrapper>\n  );\n};\n\nexport default AboutPage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 56px;\n  text-align: center;\n`;\n\nexport const IntroductionText = styled.h1`\n  animation: changeColorText 5s infinite;\n  width: 70vw;\n  margin: 5px 0px;\n  background: transparent;\n  @keyframes changeColorText {\n    0% {\n      opacity: 0;\n    }\n    10% {\n      opacity: 0;\n    }\n    50% {\n      opacity: 1;\n    }\n    90% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.5em;\n  }\n`;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { introductionsState } from \"../../store/info\";\nimport { Wrapper, IntroductionText } from \"./styles\";\n\nconst MainPage = () => {\n  const introductions = useRecoilValue(introductionsState);\n  const [currentIntroduction, setCurrentIntroduction] = useState(0);\n\n  const changeIntroduction = useCallback(() => {\n    if (currentIntroduction === 3) {\n      return setCurrentIntroduction(0);\n    }\n    return setCurrentIntroduction((current) => current + 1);\n  }, [currentIntroduction]);\n\n  const currentRow = (row: number) => {\n    switch (row) {\n      case 1:\n        return introductions[currentIntroduction].first;\n      case 2:\n        return introductions[currentIntroduction].second;\n      case 3:\n        return introductions[currentIntroduction].third;\n    }\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => changeIntroduction(), 5000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [changeIntroduction]);\n\n  return (\n    <Wrapper>\n      <IntroductionText>{currentRow(1)}</IntroductionText>\n      <IntroductionText>{currentRow(2)}</IntroductionText>\n      <IntroductionText>{currentRow(3)}</IntroductionText>\n    </Wrapper>\n  );\n};\n\nexport default MainPage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 5rem 0;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 50em;\n  height: 30em;\n\n  @media (max-width: 1150px) {\n    width: 30em;\n    height: 18em;\n  }\n\n  @media (max-width: 768px) {\n    width: 25em;\n    height: 20em;\n  }\n`;\n\nexport const CommentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-top: 3rem;\n  width: 30vw;\n\n  @media (max-width: 768px) {\n    width: 100vw;\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 2.25em;\n\n  @media (max-width: 1150px) {\n    font-size: 2em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 1.5em;\n  }\n`;\n\nexport const Period = styled.p`\n  font-size: 1.125em;\n\n  @media (max-width: 1150px) {\n    font-size: 1em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.75em;\n    margin-bottom: 0.75em;\n  }\n`;\n\nexport const HashtagsWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1em;\n\n  @media (max-width: 1150px) {\n    font-size: 0.75em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.5em;\n  }\n`;\n\nexport const DescriptionsWrapper = styled.ul`\n  font-size: 1.375em;\n\n  @media (max-width: 1150px) {\n    font-size: 1em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.75em;\n    margin: 1em 0;\n  }\n`;\n\nexport const Link = styled.a`\n  text-decoration: none;\n  color: ${(props) => props.theme.textColor};\n  font-size: 1.125em;\n\n  &:hover {\n    color: ${(props) => props.theme.headerColor};\n  }\n\n  @media (max-width: 1150px) {\n    font-size: 1em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.75em;\n    margin-bottom: 0.75em;\n  }\n`;\n","import { IProject } from \"../../types/project.type\";\n\nimport {\n  Wrapper,\n  Image,\n  CommentWrapper,\n  Title,\n  Period,\n  DescriptionsWrapper,\n  Link,\n  HashtagsWrapper,\n} from \"./styles\";\n\nconst Project = ({\n  imageUrl,\n  title,\n  period,\n  descriptions,\n  projectLink,\n  hashtags,\n}: IProject) => {\n  return (\n    <Wrapper>\n      <Image src={imageUrl} />\n      <CommentWrapper>\n        <Title>{title}</Title>\n        <Period>{period}</Period>\n        <HashtagsWrapper>\n          {hashtags.map((hashtag, index) => (\n            <li key={index}>{\"#\" + hashtag}</li>\n          ))}\n        </HashtagsWrapper>\n        <DescriptionsWrapper>\n          {descriptions.map((description, index) => (\n            <li key={index}>{\"📌 \" + description}</li>\n          ))}\n        </DescriptionsWrapper>\n        <Link href={projectLink} target=\"_blank\">\n          &#8594; 해당 프로젝트로 이동\n        </Link>\n      </CommentWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Project;\n","export default __webpack_public_path__ + \"static/media/kuna.e5b52b2d.png\";","export default __webpack_public_path__ + \"static/media/mlb.01688e8d.png\";","export default __webpack_public_path__ + \"static/media/portfolio.2648bfa9.png\";","export default __webpack_public_path__ + \"static/media/youtube.c1eb8c2f.png\";","import { atom } from \"recoil\";\nimport KUNAImage from \"../assets/images/kuna.png\";\nimport MLBImage from \"../assets/images/mlb.png\";\nimport PortfolioImage from \"../assets/images/portfolio.png\";\nimport YoutubeImage from \"../assets/images/youtube.png\";\nimport { IProject } from \"../types/project.type\";\n\nexport const projectsState = atom<IProject[]>({\n  key: \"projectsState\",\n  default: [\n    {\n      imageUrl: MLBImage,\n      title: \"MLB 프로젝트\",\n      period: \"21.12.19 ~ 현재 진행중\",\n      descriptions: [\n        \"메이저리그를 소개해 주는 사이트\",\n        \"많은 사람들이 MLB를 즐겼으면 하는 마음에 시작하게된 개인 프로젝트\",\n      ],\n      projectLink: \"https://github.com/tnehd1998/MLB\",\n      hashtags: [\"MLB\", \"취미\", \"개인\", \"팬 페이지\"],\n    },\n    {\n      imageUrl: PortfolioImage,\n      title: \"자기소개 포트폴리오\",\n      period: \"21.10.06 ~ 현재 진행중\",\n      descriptions: [\n        \"직접 만들어본 자기 소개용 첫 개인 프로젝트\",\n        \"자기소개, 사용기술, 프로젝트를 설명하는 사이트\",\n      ],\n      projectLink: \"https://github.com/tnehd1998/Portfolio\",\n      hashtags: [\"첫 프로젝트\", \"자기소개\", \"개인\", \"포트폴리오\"],\n    },\n    {\n      imageUrl: YoutubeImage,\n      title: \"YouTube 클론 프로젝트\",\n      period: \"21.10.14 ~ 21.10.29\",\n      descriptions: [\n        \"YouTube REST API 사용 연습\",\n        \"자주 사용하는 YouTube의 기능을 그대로 따라서 만들어본 개인 프로젝트\",\n      ],\n      projectLink: \"https://github.com/tnehd1998/Youtube\",\n      hashtags: [\"YouTube\", \"개인\", \"재미\", \"클론\"],\n    },\n  ],\n});\n\nexport const teamProjectsState = atom<IProject[]>({\n  key: \"teamProjectsState\",\n  default: [\n    {\n      imageUrl: KUNAImage,\n      title: \"KUNA 쇼핑몰 프로젝트\",\n      period: \"22.01.05 ~ 22.02.23\",\n      descriptions: [\n        \"소녀나라를 기반으로 만들어본 쇼핑몰 사이트\",\n        \"프론트엔드, 벡엔드를 나눠서 처음 진행해본 팀 프로젝트\",\n      ],\n      projectLink: \"https://github.com/Konkuk-Toy-Project/KUNA-client\",\n      hashtags: [\"KUNA\", \"쇼핑\", \"팀\", \"성장\"],\n    },\n  ],\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 5rem;\n  padding-top: 20vh;\n`;\n\nexport const Category = styled.p`\n  font-size: 32px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport Project from \"../../components/Project\";\nimport { projectsState, teamProjectsState } from \"../../store/project\";\nimport { Wrapper, Category } from \"./styles\";\n\nconst ProjectPage = () => {\n  const teamProjects = useRecoilValue(teamProjectsState);\n  const projects = useRecoilValue(projectsState);\n\n  return (\n    <Wrapper>\n      <Category>팀 프로젝트</Category>\n      {teamProjects.map((project, index) => (\n        <Project\n          key={index}\n          imageUrl={project.imageUrl}\n          title={project.title}\n          period={project.period}\n          descriptions={project.descriptions}\n          projectLink={project.projectLink}\n          hashtags={project.hashtags}\n        />\n      ))}\n      <Category>개인 프로젝트</Category>\n      {projects.map((project, index) => (\n        <Project\n          key={index}\n          imageUrl={project.imageUrl}\n          title={project.title}\n          period={project.period}\n          descriptions={project.descriptions}\n          projectLink={project.projectLink}\n          hashtags={project.hashtags}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default ProjectPage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ContactWrapper = styled.div`\n  width: 26em;\n  height: 26em;\n  border-radius: 25%;\n  border: 1px solid ${(props) => props.theme.textColor};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 1150px) {\n    width: 22em;\n    height: 22em;\n  }\n\n  @media (max-width: 768px) {\n    width: 18em;\n    height: 18em;\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 2.6em;\n\n  @media (max-width: 1150px) {\n    font-size: 2.2em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 1.8em;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 10em;\n  height: 10em;\n  border-radius: 50%;\n  margin: 1em 0;\n\n  @media (max-width: 1150px) {\n    width: 8em;\n    height: 8em;\n  }\n\n  @media (max-width: 768px) {\n    width: 6em;\n    height: 6em;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 1.125em;\n\n  @media (max-width: 1150px) {\n    font-size: 1em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.8em;\n  }\n`;\n\nexport const ContactLinkWrapper = styled.div`\n  display: flex;\n  width: 6em;\n  justify-content: space-evenly;\n  align-items: center;\n  margin-top: 1em;\n\n  @media (max-width: 1150px) {\n    width: 5em;\n    margin-top: 0.8em;\n  }\n\n  @media (max-width: 768px) {\n    width: 4em;\n    margin-top: 0.6em;\n  }\n`;\n\nexport const ContactLink = styled.a<{ item: string }>`\n  font-size: 2.5em;\n  color: ${(props) =>\n    props.item === \"github\" ? props.theme.textColor : \"#0D65C2\"};\n\n  &:hover {\n    transform: scale(1.2);\n  }\n\n  @media (max-width: 1150px) {\n    font-size: 2em;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 1.5em;\n  }\n`;\n","import React from \"react\";\nimport {\n  Wrapper,\n  ContactWrapper,\n  Title,\n  Image,\n  Description,\n  ContactLinkWrapper,\n  ContactLink,\n} from \"./styles\";\n\nconst ContactPage = () => {\n  return (\n    <Wrapper>\n      <ContactWrapper>\n        <Title>✉️ Contact Me ✉️</Title>\n        <Image\n          src={\n            \"https://user-images.githubusercontent.com/72953316/139514536-30a9a42d-e77f-4912-b7b0-b591ad362e91.jpeg\"\n          }\n        />\n        <Description>이름 : 이수동</Description>\n        <Description>이메일 : tnehd1998@naver.com</Description>\n        <ContactLinkWrapper>\n          <ContactLink\n            href=\"https://github.com/tnehd1998\"\n            target=\"_blank\"\n            item={\"github\"}\n          >\n            <i className=\"fab fa-github\"></i>\n          </ContactLink>\n          <ContactLink\n            href=\"https://www.linkedin.com/in/%EC%88%98%EB%8F%99-%EC%9D%B4-45142a220/\"\n            target=\"_blank\"\n            item={\"linkedIn\"}\n          >\n            <i className=\"fa fa-linkedin-square\"></i>\n          </ContactLink>\n        </ContactLinkWrapper>\n      </ContactWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ContactPage;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#f5f6fa\",\n  textColor: \"#252525\",\n  headerColor: \"#dcdde1\",\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#252525\",\n  textColor: \"#f5f6fa\",\n  headerColor: \"#718093\",\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding-top: 10vh;\n`;\n","import { atom } from \"recoil\";\nimport { IBlog } from \"../types/blog.type\";\n\nexport const blogState = atom<IBlog[]>({\n  key: \"blogState\",\n  default: [\n    {\n      blogId: 1,\n      blogLink: \"https://techblog.woowahan.com/6339/\",\n      title: \"Store에서 비동기 통신 분리하기 (feat. React Query)\",\n      question: \"상태관리에서 비동기 데이터 처리를 어떻게 분리할 수 있을까?\",\n    },\n    {\n      blogId: 2,\n      blogLink: \"https://yeoulcoding.tistory.com/149\",\n      title: \"[React] 클로저와 useState Hooks\",\n      question: \"클로저가 React의 어느 부분에서 활용되고 있을까?\",\n    },\n  ],\n});\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.li`\n  display: flex;\n  border: 2px solid ${(props) => props.theme.textColor};\n  margin: 1em;\n  padding: 2em 1em;\n  border-radius: 10px;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.1);\n    transition: all 0.3s ease-in-out;\n  }\n`;\n\nexport const Link = styled.a`\n  text-decoration: none;\n  width: 70vw;\n  color: ${(props) => props.theme.textColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const BlogNumber = styled.p`\n  font-size: 3vw;\n  width: 10%;\n`;\n\nexport const BlogTitle = styled.p`\n  font-size: 1.5vw;\n  width: 40%;\n`;\n\nexport const BlogComment = styled.p`\n  font-size: 2vw;\n  width: 50%;\n`;\n","import { IBlog } from \"../../types/blog.type\";\nimport { Wrapper, Link, BlogNumber, BlogTitle, BlogComment } from \"./styles\";\n\nconst Blog = ({ blogLink, blogId, title, question }: IBlog) => {\n  return (\n    <Wrapper>\n      <Link href={blogLink} target=\"_blank\" rel=\"noreferrer\">\n        <BlogNumber>{`#${blogId}`}</BlogNumber>\n        <BlogTitle>{title}</BlogTitle>\n        <BlogComment>{`\"${question}\"`}</BlogComment>\n      </Link>\n    </Wrapper>\n  );\n};\n\nexport default Blog;\n","import { Wrapper } from \"./styles\";\nimport styled from \"styled-components\";\nimport { useRecoilValue } from \"recoil\";\nimport { blogState } from \"../../store/blog\";\nimport Blog from \"../../components/Blog\";\n\nconst Title = styled.p`\n  font-size: 4vw;\n  text-align: center;\n  margin: 2em 0;\n`;\n\nconst Description = styled.p`\n  font-size: 2vw;\n  text-align: center;\n  margin: 2em 0;\n`;\n\nconst BlogList = styled.ul`\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst BlogPage = () => {\n  const blogs = useRecoilValue(blogState);\n  return (\n    <Wrapper>\n      <Title>공유하고 싶은 좋은 글</Title>\n      <Description>\n        🤔스스로 생긴 질문🤔에 대한 🤩답변을 담고 있는 글 목록🤩\n      </Description>\n      <BlogList>\n        {blogs.map((blog) => (\n          <Blog\n            blogId={blog.blogId}\n            blogLink={blog.blogLink}\n            title={blog.title}\n            question={blog.question}\n          />\n        ))}\n      </BlogList>\n    </Wrapper>\n  );\n};\n\nexport default BlogPage;\n","import React from \"react\";\nimport {\n  Route,\n  HashRouter as Router,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nimport Header from \"./components/Header\";\nimport AboutPage from \"./pages/AboutPage\";\nimport MainPage from \"./pages/MainPage\";\nimport ProjectPage from \"./pages/ProjectPage\";\nimport ContactPage from \"./pages/ContactPage\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme, lightTheme } from \"./styles/theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isLightThemeState } from \"./store/theme\";\nimport BlogPage from \"./pages/BlogPage\";\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset}\n  \n  body{\n    font-family: \"Jua\", sans-serif;\n    background: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n    transition: color 0.5s linear;\n  }\n`;\n\nconst App = () => {\n  const isLightTheme = useRecoilValue(isLightThemeState);\n\n  return (\n    <Router>\n      <ThemeProvider theme={isLightTheme ? lightTheme : darkTheme}>\n        <GlobalStyles />\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/about\" component={AboutPage} />\n          <Route exact path=\"/projects\" component={ProjectPage} />\n          <Route exact path=\"/blogs\" component={BlogPage} />\n          <Route exact path=\"/contact\" component={ContactPage} />\n          <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n      </ThemeProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}